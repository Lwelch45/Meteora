akka {
  # Debug:
  loglevel = "DEBUG"
  # Actor:
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    # Debug:
    debug {
      receive = on
    }
  }
  # Cluster:
  cluster {
    min-nr-of-members = 1
    seed-nodes = [
      "akka.tcp://Meteora@127.0.0.1:7000"
    ]
  }
  # Remote:
  remote {
    netty.tcp {
      hostname = "127.0.0.1"
      port = 7000
      send-buffer-size = 16 megabytes
      receive-buffer-size = 16 megabytes
      maximum-frame-size = 16 megabytes
    }
  }
}

meteora {
  # Coordinator:
  coordinator {
    set-timeout = 60 seconds
    get-timeout = 60 seconds
    replicas-consistency = 1
    read {
      consistency = 1
      timeout = 10 seconds
    }
    write {
      consistency = 1
      timeout = 10 seconds
    }
  }
  # Cluster:
  cluster {
    num-of-virtual-nodes = 128
  }
  # Repair:
  repair {
    num-of-partitions = 32768
    total-timeout = 1 day
    fetch-token-ranges-timeout = 60 seconds
    fetch-reachable-preference-list-timeout = 60 seconds
    fetch-storage-actor-ref-timeout = 60 seconds
    fetch-merkle-tree-timeout = 1 hour
    fetch-subscriber-actor-ref-timeout = 60 seconds
    stream-token-range-timeout = 1 hour
  }
  # Rest:
  rest {
    interface = "0.0.0.0"
    port = 9000
    timeout = 60 seconds
  }
  # RocksDB:
  rocksdb {
    dir = "target/meteora/data"
    lock {
      stripes = 64
      timeout = 10 seconds
    }
  }
  # Storage:
  storage {
    subscribe-timeout = 10 seconds
    store-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"
      throughput = 1
      thread-pool-executor {
        # 5 * 4 Cores.
        fixed-pool-size = 20
      }
    }
  }
  # Supervisor:
  supervisor {
    minbackoff = 3 seconds
    maxbackoff = 30 seconds
    randomfactor = 0.25
  }
}